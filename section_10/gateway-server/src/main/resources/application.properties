spring.application.name=gateway-server

# Logging level
logging.level.com.bankdemo.gatewayserver=debug

# Config server path
spring.config.import=optional:configserver:http://localhost:8071/

# Spring Cloud Gateway
spring.cloud.gateway.server.webflux.discovery.locator.enabled=false
spring.cloud.gateway.server.webflux.discovery.locator.lower-case-service-id=true
spring.cloud.gateway.server.webflux.httpclient.connect-timeout=1000
spring.cloud.gateway.server.webflux.httpclient.response-timeout=2s

# Redis
spring.data.redis.port=6379
spring.data.redis.host=localhost
spring.data.redis.connect-timeout=2s
spring.data.redis.timeout=1000

info.app.name=gateway-server
info.app.description=Eazy Bank Gateway Server Application
info.app.version=1.0

spring.h2.console.enabled=true
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

# actuator
management.endpoints.web.exposure.include=*
management.endpoint.gateway.access=unrestricted
management.info.env.enabled=true

# TODO important Resilience properties
# resilience4j.circuitbreaker.configs.default applies to all kind of Circuits you create for the microservices
# how many requests it has to monitor before taking a decision to continue with the close status or to move to open status
resilience4j.circuitbreaker.configs.default.sliding-window-size=10
# Periodically it move to half open state (HOS) and it's going to allow certain amount of traffic. Set this property to
# specify how many request to allow in the HOS. Based upon how these requests are processed it can decide whether to go
# back to open state or move to close state.
resilience4j.circuitbreaker.configs.default.permitted-number-of-calls-in-half-open-state=2
# this is in %. If at least 50% of the request are failing then it can move to open state from the closed state
resilience4j.circuitbreaker.configs.default.failure-rate-threshold=50
# in Milliseconds. 10000ms -> 10s. Circuit breaker is going to wait 10s whenever it tries to move to HOS
# and allow the partial traffic
resilience4j.circuitbreaker.configs.default.wait-duration-in-open-state=10000

# To refresh config properties at runtime
#management.endpoints.web.exposure.include=refresh,busrefresh
# actuator custom
#management.endpoints.web.exposure.include=health,info,metrics

# deleted the properties that are on the config server


