server.port=8080
spring.profiles.active=default
spring.application.name=accounts
# Config server path
spring.config.import=optional:configserver:http://localhost:8071/

# Logging level
logging.level.com.bankdemo.accounts=debug

# DB
spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=

# Eureka
# connect to Eureka using the ip address
eureka.instance.preferIpAddress=true
# the ms fetches the registry details whenever it is trying to connect to other ms
eureka.client.fetchRegistry=true
# register this ms with Eureka
eureka.client.registerWithEureka=true
eureka.client.serviceUrl.defaultZone=http://localhost:8070/eureka/

info.app.name=accounts
info.app.description=Eazy Bank Accounts Application
info.app.version=1.0

spring.h2.console.enabled=true
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

# actuator
management.endpoints.web.exposure.include=*
management.endpoint.shutdown.access=unrestricted
management.info.env.enabled=true

# Health endpoints for before starting gateway-server in the docker-compose file
management.health.readinessstate.enabled=true
management.health.livenessstate.enabled=true
management.endpoint.health.probes.enabled=true

# Enable OpenFeign and CB
spring.cloud.openfeign.circuitbreaker.enabled=true

# Circuit Breaker properties
resilience4j.circuitbreaker.configs.default.sliding-window-size=10
resilience4j.circuitbreaker.configs.default.permitted-number-of-calls-in-half-open-state=2
resilience4j.circuitbreaker.configs.default.failure-rate-threshold=50
resilience4j.circuitbreaker.configs.default.wait-duration-in-open-state=10000

# retry pattern
resilience4j.retry.configs.default.max-attempts=3
resilience4j.retry.configs.default.wait-duration=500
resilience4j.retry.configs.default.enable-exponential-backoff=true
resilience4j.retry.configs.default.exponential-backoff-multiplier=2
resilience4j.retry.configs.default.ignore-exceptions=java.lang.NullPointerException
resilience4j.retry.configs.default.retry-exceptions=java.util.concurrent.TimeoutException

# rate limiter pattern
# How long a caller will wait to acquire a permit when none are available. Wait up to 1 second. If a permit doesn?t become available within 1s, the call is rejected with RequestNotPermitted (triggering any fallback if configured).
resilience4j.ratelimiter.configs.default.timeout-duration=1000
# How often the available permits are reset. Every 5 seconds, the bucket refills.
resilience4j.ratelimiter.configs.default.limit-refresh-period=5000
# How many calls are permitted per refresh period. 1 call per 5-second window.
resilience4j.ratelimiter.configs.default.limit-for-period=1


# To refresh config properties at runtime
#management.endpoints.web.exposure.include=refresh,busrefresh
# actuator custom
#management.endpoints.web.exposure.include=health,info,metrics

# deleted the properties that are on the config server

